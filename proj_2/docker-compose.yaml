services:
  orderservice:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    container_name: order-service
    restart: unless-stopped
    ports:
      - "8000:8000"  
    environment:
      - RABBITMQ_HOST=rabbitmq
      - DATABASE_URL=postgresql://admin:adminpass@postgres_orders:5432/orders_db
    depends_on:
      - postgres_orders
      - rabbitmq

  paymentservice:
    build:
      context: ./PaymentService
      dockerfile: Dockerfile
    container_name: payment-service
    restart: unless-stopped
    ports:
      - "8008:8008" 
    environment:
      - RABBITMQ_HOST=rabbitmq
      - DATABASE_URL=postgresql://admin:adminpass@postgres_payments:5432/payments_db
    depends_on:
      - postgres_payments
      - rabbitmq
  
  merchantservice:
    build:
      context: ./MerchantService
      dockerfile: Dockerfile
    container_name: merchant-service
    restart: unless-stopped
    ports:
      - "8001:8001" 
    environment:
      - DATABASE_URL=postgresql://admin:adminpass@postgres_merchant_db:5432/merchant_db
    depends_on:
      - postgres_merchant_db
    networks:
      - merchant-network
    
  inventoryservice:
    build:
      context: ./InventoryService
      dockerfile: Dockerfile
    container_name: inventory-service
    restart: unless-stopped
    ports:
      - "8003:8003" 
    environment:
      - DATABASE_URL=postgresql://admin:adminpass@postgres_inventory_db:5432/inventory_db
    depends_on:
      - postgres_inventory_db
    networks:
      - inventory-network

  buyerservice:
    build:
      context: ./BuyerService
      dockerfile: Dockerfile
    container_name: buyer-service
    restart: unless-stopped
    ports:
      - "8002:8002" 
    environment:
      - DATABASE_URL=postgresql://admin:adminpass@postgres_buyer_db:5432/buyer_db
    depends_on:
      - postgres_buyer_db
    networks:
      - buyer-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "15672:15672"  
      - "5672:5672" 
  
  postgres_merchant_db:
    image: postgres:15
    container_name: postgres_merchant_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpass
      POSTGRES_DB: merchant_db
    volumes:
      - postgres_merchant_data:/var/lib/postgresql/data
    networks:
      - merchant-network
  
  postgres_buyer_db:
    image: postgres:15
    container_name: postgres_buyer_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpass
      POSTGRES_DB: buyer_db
    volumes:
      - postgres_buyer_data:/var/lib/postgresql/
    networks:
      - buyer-network

  postgres_inventory_db:
    image: postgres:15
    container_name: postgres_inventory_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpass
      POSTGRES_DB: inventory_db
    volumes:
      - postgres_inventory_data:/var/lib/postgresql/data
    networks:
      - inventory-network

  postgres_orders:
    image: postgres:15
    container_name: postgres_orders
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpass
      POSTGRES_DB: orders_db
    volumes:
      - postgres_orders_data:/var/lib/postgresql/data
    ports:
      - "5433:5432" 

  postgres_payments:
    image: postgres:15
    container_name: postgres_payments
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpass
      POSTGRES_DB: payments_db
    volumes:
      - postgres_payments_data:/var/lib/postgresql/data
    ports:
      - "5434:5432" 

volumes:
  postgres_orders_data:
    driver: local
  postgres_payments_data:
    driver: local
  postgres_merchant_data:
    driver: local
  postgres_buyer_data:
    driver: local
  postgres_inventory_data:
    driver: local
  
networks:
  buyer-network:
    driver: bridge
  merchant-network:
    driver: bridge
  inventory-network:
    driver: bridge
